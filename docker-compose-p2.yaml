version: '3.4'

x-common: &common
  image: apache/airflow:2.7.0
  user: "${AIRFLOW_UID}:0"
  env_file:
    - ./problem_2/.env
  volumes:
    - ./app/dags:/opt/airflow/dags

x-depends-on: &depends-on
  depends_on:
    postgres:
      condition: service_healthy
    airflow-init:
      condition: service_completed_successfully

services:
  autocheck_db:
    env_file:
      - ./problem_2/.env
    image: postgres:15
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=${AUTOCHEK_DB_USER:-postgres}
      - POSTGRES_PASSWORD=${AUTOCHEK_DB_PASSWORD:-postgres}
    volumes:
      - ./problem_2/sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql

  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "airflow" ]
      interval: 5s
      retries: 5
    env_file:
      - .env

  scheduler:
    <<: *common
    <<: *depends-on
    container_name: airflow-scheduler
    command: scheduler
    restart: on-failure
    ports:
      - "8793:8793"

  webserver:
    <<: *common
    <<: *depends-on
    container_name: airflow-webserver
    restart: always
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "--fail",
          "http://localhost:8080/health"
        ]
      interval: 30s
      timeout: 30s
      retries: 5

  airflow-init:
    <<: *common
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags
        chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags}
        exec /entrypoint airflow version
